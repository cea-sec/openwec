name: Build and run tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    container: rust:slim-bookworm

    # see https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    # Service containers to run with `build`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        apt-get update && \
        apt-get install -y --no-install-recommends \
        libkrb5-dev \
        libssl-dev \
        make \
        clang \
        pkgconf ;
    - name: Clippy
      run: rustup component add clippy && cargo clippy -- -Dwarnings
    - name: Run tests
      run: |
        # Env var to connect to the Postgres service
        export POSTGRES_HOST="postgres"
        export POSTGRES_PORT="5432"
        export POSTGRES_USER="postgres"
        export POSTGRES_PASSWORD="postgres"
        export POSTGRES_DBNAME="test"
        export REDIS_URL="redis://redis:6379"
        cargo test --verbose
